
---
# This will scan linux systems for JBoss BRMS or Drools Installations
    - name: Gather brms.kie-api-ver
      raw: find / -name kie-api* 2> /dev/null | sed 's/.*kie-api-//g' | sed 's/.jar.*//g' | sort -u
      register: kie-api-ver
      ignore_errors: yes
    - name: Gather brms.drools-core-ver
      raw: find / -name drools-core* 2> /dev/null | sed 's/.*drools-core-//g' | sed 's/.jar.*//g' | sort -u
      register: drools-core-ver
      ignore_errors: yes
    - name: Gather brms.kie-war-ver
      raw: OIFS="$IFS"; IFS=$'\n'; for war in $(find / -name kie*.war 2> /dev/null); do if [[ -d  "$war" ]]; then cat "$war"/META-INF/MANIFEST.MF 2> /dev/null | grep Implementation-Version | sed "s/Implementation-Version://g" | sed "s/ //g" | sed 's/\r$//' | sort -u; else fgrep -irsal kie-api "$war" | egrep -o "[0-9]\.[0-9]\.[0-9].*-" | sed "s/-$//g" | sed 's/\r$//' | sort -u; fi; done; IFS="$OIFS"
      register: kie-war-ver
      ignore_errors: yes
    #- name: Gather brms.business-central-war-ver
    #  raw: OIFS="$IFS"; IFS=$'\n'; for war in $(find / -name kie*.war 2> /dev/null); do if [[ -d  "$war" ]]; then cat "$war"/META-INF/MANIFEST.MF | grep Implementation-Version | sed "s/Implementation-Version://g" | sort -u; else fgrep -irsal kie-api "$war" | egrep -o "[0-9]\.[0-9]\.[0-9].*-" | sed "s/-$//g"; fi | sort -u; done; IFS="$OIFS"
    #  register: business-central-war-ver
    #  ignore_errors: yes
    #- name: Gather jboss versions currently running
    #  raw: for proc_pid in $(find /proc -maxdepth 1 -name "[0-9]*"); do ls -l ${proc_pid}/fd 2>/dev/null | grep "java"; done | grep "/modules/system/layers/base" | sed -n "s/.*\->//p" | sed -n 's/\/modules\/system\/layers\/base.*//p' | sort -u
    #  register: running_versions
    #  ignore_errors: yes
    #- name: set facts
    #  ignore_errors: yes
    #  set_fact:
    #    res:
    #     {installed_versions: "{{ kie-api-ver.stdout }}; {{ runjar_ver.stdout }}", running_versions: "{{ running_versions.stdout }}", hostname: "{{ hostname.stdout }}", cpu_cores: "{{ cpu_cores.stdout }}"}

